@using DataLayer.Models
@model DatingSite.Models.ProfileViewModel

<div class="margin-container card-properties h-100">
    <div class="card mx-auto backgroundFrosty profile-border sketchy">
        <div class="cardheader">
            <img class="cardimg mg-1 padding-0" src="@Url.Content(Model.User.ImgUrl)" alt="Card image cap">
            <div class="card-body profile-info">

                <h2 class="card-title">@Model.User.NickName, @Model.User.Age</h2>
                <h4 class="card-subtitle">@Model.User.FirstName @Model.User.LastName</h4>
                <h4 class="card-subtitle">@Model.User.Nationality.Name <img src="~/img/Countries-Icon/@(@Model.User.Nationality.Name).png" style="width: 20px; height:20px;" /></h4>
                <h3 class="card-text"></h3>
                <h6 class="card-subtitle">Gaming personality: @Model.User.Personality.Description  </h6>
                @{if (Model.User.Mail.Equals(User.Identity.Name))
                    {
                        <a asp-controller="ChangeGGP" asp-action="Index" class="card-link"><img src="~/img/Icons/pencil.svg" style="width: 15px; height:15px;" />Edit Preferences</a>
                    }
                }
                @if (!Model.User.Mail.Equals(User.Identity.Name))
                {
                    <li class="pd-top-05">
                        <div class="">
                            <form asp-action="FriendRequest" asp-controller="Friends" method="post">
                                <input type="hidden" name=receiverId value="@Model.User.UserId" />
                                <input type="hidden" name=senderId value="@ViewBag.currentUser" />
                                <input type="submit" value="Add Friend" class="btn btn-primary button-profile-border" data-toggle="modal" data-target="#exampleModal" />
                            </form>
                        </div>
                    </li>
                }
            </div>
        </div>
        <ul class="list-group list-group-flush mg-1 in-card-border">
            @if (Model.Score.HasValue)
            {
                <li class="list-group-item text-center backgroundFrosty">
                    <h5 class="list-group-item profile-header">Score</h5>

                    <div style="width:30%; display:inline-block;">
                        <h1>@Model.Score/10</h1>
                        <h1>@Model.ScoreDescription</h1>
                    </div>
                </li>
            }
            <li class="list-group-item text-center backgroundFrosty">
                <h5 class="list-group-item profile-header">Games</h5>
                <div class="player-info-items">
                    @foreach (var game in Model.Games)
                    {
                        <div class="player-info">
                            @(game.Name + " ")
                            <img class="img-game" src="~/img/Game/@(game.Name).jpg" />
                        </div>
                    }
                </div>
            </li>
            <li class="list-group-item text-center backgroundFrosty">
                <h5 class="list-group-item profile-header">Genres</h5>
                <div class="player-info-items">
                    @foreach (var genre in Model.Genres)
                    {
                        <div class="player-info">
                            @(genre.Name + " ")
                            <img class="img-genre" src="~/img/Genre/@(genre.Name).png" />
                        </div>
                    }
                </div>
            </li>
            <li class="list-group-item text-center backgroundFrosty">
                <h5 class="list-group-item profile-header">Platforms</h5>
                <div class="player-info-items">
                    @foreach (var platform in Model.Platforms)
                    {
                        <div class="player-info">
                            @(platform.Name + " ")
                            <img class="img-platform" src="~/img/Platform/@(platform.Name).png" />
                        </div>
                    }
                </div>
            </li>
            @{if (Model.User.Mail.Equals(User.Identity.Name))
                {
                    <li class="list-group-item text-center backgroundFrosty">
                        <h5 id="VisitorTitle" class="list-group-item profile-header">Latest Vistors</h5>
                        <div class="player-info-items" id="Visits">
                            <div class="player-info w-100 flexdirectionrow" id="visitDiv"></div>
                        </div>
                    </li>
                }
            }
            <li class="list-group-item text-center backgroundFrosty">
                <h5 id="PostsTitle" class="list-group-item profile-header">Posts</h5>
                <div>
                    <div>
                        <h6 class="mg-top-2">Write something</h6>
                        <div class="row">
                            <div class="form-group w-100">
                                <div class="form-group required-field-block">
                                    <span class="input-group-addon"><span class="glyphicon glyphicon-pencil"></span></span>
                                    <textarea rows="5" size="30" id="sendPostTextArea"  maxlength="140" value="" class="form-control" placeholder="Write @Model.User.NickName a message..."></textarea>
                                    <div class="required-icon">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row fit-content">
                            <div class="form-group">
                                <button class="btn btn-primary button-profile-border" id="btnSendMessage"><strong>Send Message</strong></button>
                            </div>
                        </div>
                        <div>
                            @foreach (var post in Model.Posts)
                            {
                                <!--<div class="player-info">
                                    @if (post.Receiver.Mail.Equals(User.Identity.Name))
                                    {
                                        @Html.ActionLink("Delete", "DeletePost", "Profile", new { id = post.PostId }, new { @class = "btn btn-danger btn-sm", id = "removePostBtn" });
                                    }
                                    <hr />
                                    <a href="@Url.Action("Index", "Profile", new { profile = @post.Sender.NickName })">-->
                                        @*<h3>From: @post.Sender.Firstname @post.Sender.Lastname</h3>*@
                                        <!--@(post.Sender.NickName + " ")
                                        <img class="img-platform" src="@Url.Content(post.Sender.ImgUrl)" />
                                    </a>
                                    @(post.TimeStamp)
                                    @(post.Content)
                                </div>-->

                                <div class="card mt-2" >
                                    <div class="card-body text-left">
                                        <div class="col">
                                            <div class="row d-flex align-items-center">
                                                <img class="img-platform rounded mr-2" src="@Url.Content(post.Sender.ImgUrl)" />
                                                <h5 class="card-title mt-1">@post.Sender.NickName</h5>
                                            </div>
                                        </div>
                                        <p class="card-text mt-1">@post.Content</p>
                                        <h6 class="text-muted mt-n3">@post.TimeStamp.ToShortDateString()</h6>
                                        @if (post.Receiver.Mail.Equals(User.Identity.Name))
                                        {
                                            @Html.ActionLink("Delete", "DeletePost", "Profile", new { id = post.PostId }, new { @class = "btn btn-danger btn-sm ", id = "removePostBtn" });
                                        }
                                    </div>
                                </div>


                            }
                        </div>
                    </div>
                </div>
            </li>
            @if (Model.User.Mail.Equals(User.Identity.Name))
            {
            <li class="list-group-item text-center backgroundFrosty">
                <div class="card-body player-info-items">
                    <form asp-action="SerializeProfile" asp-controller="Profile">
                        <input type="submit" value="Serialize your profile" class="btn btn-outline-success" data-toggle="modal" data-target="#SerializeModal" />
                    </form>
                </div>
                @*@Html.ActionLink("Serialize", "Serialize", "SignedInUser", new { userName = User.Identity.Name }, new { @class = "btn btn-danger btn-sm", id = "serializeBtn" })}*@
            </li>
            }
        </ul>
        <!-- Modal -->
        <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h2 class="modal-title" id="exampleModalLabel">Friend request</h2>
                        </div>
                        <div class="modal-body">
                            <p class="text-success">User added!</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal fade" id="SerializeModal" tabindex="-1" role="dialog" aria-labelledby="SerializeModal" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h2 class="modal-title" id="SerializeModalLabel">Serialize</h2>
                    </div>
                    <div class="modal-body">
                        <p class="text-success">Serialize Succeded!</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts
        {
    <script type="text/javascript">

        $(function () {
            $('#btnSendMessage').click(function() {
                var content = $('#sendPostTextArea').val();
                var reciever = '@Model.User.Mail';
                $.post("../API/Post/Post?reciever=" + reciever + "&content=" + content,
                    function() {
                        alert("Message sent!");
                        location.reload();
                    });
            });
            $("#removePostBtn").on("click", function () {
                var answer = confirm("Are you sure you want to removed this post? It cannot be recovered once removed.");
                if (!answer) {
                    alert("The action was canceled");
                    event.preventDefault();
                    location.reload();
                }
                else {
                    alert("The post was removed.");
                    location.reload();
                };
            });
            $("#serializeBtn").on("click", function () {

                alert("Profile was serialized to your My Documents folder.");
                location.reload();
            });
            $.ajax({
                url: "/Api/Visitor/Visit",
                  type: "Post",
                  data: JSON.stringify(["@Model.User.Mail"]),
                contentType: "application/json; charset=utf-8",
                success: function(data) {
                    var i = 0;
                    $.each(data, function() {
                        $("#visitDiv").append("<div class=\" player-info\">" + data[i].name +
                            "<img  class=\"img-platform\" src=\"" + data[i].img + "\" /></div > ");

                        i++;
                    });
                    $.each
                },
                error: function() { bootbox.alert("Something went wrong, RIP"); }
                });
        });

        //$(function () {



        //$(function () {

        //});

        //$(document).ready(function () {

        //    });

            @*$(document).ready(function () {
          $.ajax({
            url: "/Api/Post/Posts",
              type: "Post",
              data: JSON.stringify(["@Model.User.Mail"]),
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                var i = 0;

                $.each(data, function () {
                    console.log(data)
                    $("#postsDiv").append("<div class=\" player-info\">Sender: " + data[i].sender + " Date: "+ data[i].date +
                        "<p>" + data[i].content + "</p></div > " );
                    i++;
                });
                $.each
            },
            error: function () { bootbox.alert("Something went wrong, RIP"); }
        });
    });*@
    </script>
    }
